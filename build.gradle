plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "org.flywaydb.flyway" version "7.11.1"
	id 'java'
	id "com.google.cloud.tools.jib" version "3.1.2"
}

sourceCompatibility = '11'

jib {
	from {
		image = 'openjdk:11'
		auth {
			username = System.getenv("docker_user").toString()
			password = System.getenv("docker_pass").toString()
		}
	}

	to {
		image = "lukas8219/pokebattle-$artifact"
		tags = ['latest', "${version}".toString()]
	}
}

bootJar {
	baseName = 'com.pokebattle.pokedex'
	mainClassName = 'com.pokebattle.pokedex.PokeBattlePokeDexApplication'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	generatedMapperSourcesDir = "${buildDir}/generated-src/mapstruct/main"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation "org.flywaydb:flyway-core:7.11.1"
	implementation "org.mapstruct:mapstruct:1.4.2.Final"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'

	implementation 'io.micrometer:micrometer-core'
	implementation 'io.micrometer:micrometer-registry-prometheus'


	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}
